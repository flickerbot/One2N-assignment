name: CI Pipeline with ArgoCD Deployment

on:
  push:
    branches:
      - main

jobs:
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Install Dependencies
        run: |
          pip install pytest
          pip install -r Code/controller/requirements.txt

     # - name: Run Unit Tests
     #   run: pytest Code/controller/tests/

  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Controller Image
        run: |
          docker build -t flickerbot/controller:dev -f Code/controller/Dockerfile Code/controller
          docker push flickerbot/controller:dev

  #update-helm:
   # name: Update Helm Chart for ArgoCD
   # runs-on: ubuntu-latest
   # needs: build-and-push
   # steps:
   #   - name: Checkout Code
   #     uses: actions/checkout@v3

    #  - name: Update Image Tag in Helm Chart
   #     run: |
   #       sed -i 's|image: .*|image: <your-dockerhub-username>/custom-controller:latest|' helm-chart/values.yaml
   #       git config user.name "github-actions[bot]"
   #       git config user.email "github-actions[bot]@users.noreply.github.com"
   #       git add helm-chart/values.yaml
   #       git commit -m "Update custom-controller image tag to latest"
   #       git push origin main
  deploy:
    name: Deploy to Minikube
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Up Kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG_CONTENT }}" > ~/.kube/config

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: 'latest'

     #- name: Deploy with Helm
     #  run: |
          #helm upgrade --install custom-controller ./helm-chart \
           # --set controller.image=flickerbot/controller \
           # --set controller.tag=dev
     #     helm upgrade --install rabbitmq-one2n ./rabbitmq-deployment-one2nfinal-0.1.0.tgz \
    #        --kubeconfig ~/.kube/config \
    #        --set existingSecret=true


      - name: Install ArgoCD CLI
        run: |
          curl -sSL -o argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          sudo install -m 555 argocd-linux-amd64 /usr/local/bin/argocd
          argocd version

      - name: Login to ArgoCD
        run: |
          argocd login ${{ secrets.ARGOCD_SERVER }} \
            --username ${{ secrets.ARGOCD_USERNAME }} \
            --password ${{ secrets.ARGOCD_PASSWORD }} \
            --insecure

      - name: Sync ArgoCD Application
        run: |
          argocd app sync rabbitmq1

      - name: Check ArgoCD Application Health
        run: |
          argocd app wait rabbitmq1 --health --timeout 300






